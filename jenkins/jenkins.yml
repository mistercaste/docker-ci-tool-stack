jenkins:
  systemMessage: "Jenkins configured by Jenkins Configuration as Code (JCasC Plugin)"
  numExecutors: 2
  disableRememberMe: true
  crumbIssuer: "standard"
  remotingSecurity:
    enabled: true
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "password"
        - id: "user"
          password: "password"
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Read:authenticated"
        - "Overall/Administer:admin"
security:
  apiToken:
    usageStatisticsEnabled: false
  queueItemAuthenticator:
    authenticators:
      - global:
          strategy: "triggeringUsersAuthorizationStrategy"
credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "Nexus Admin User"
              id: "nexus"
              username: "admin"
              password: "admin123"
              scope: "GLOBAL"
          - basicSSHUserPrivateKey:
              scope: "GLOBAL"
              id: "50ff7d29-65eb-4396-9476-f823734a25af"
              username: "admin"
              passphrase: "lMNOKgKXWKJwk6oT/wZiww=="
              description: "Sonar Token"
tool:
  git:
    installations:
      - name: "Default"
        home: "/usr/bin/git"
  jdk:
    installations:
      - name: "JDK 8"
        properties:
          - installSource:
              installers:
                - adoptOpenJdkInstaller:
                    id: "jdk8u252-b09"
  maven:
    installations:
      - name: "Maven 3.3.3"
        properties:
          - installSource:
              installers:
                - maven:
                    id: "3.3.3"
unclassified:
  location:
    url: http://jenkins:8080
jobs:
  - script: >
      job("SEED") {
          description("Generates Jenkins Jobs using Job DSL scripts")
          logRotator {
              numToKeep(10)
          }
          triggers {
                cron('H 11 * * *')
          }
          keepDependencies(false)
          scm {
              git {
                  remote {
                      github("marcelbirkner/docker-ci-tool-stack", "https")
                  }
                  branch("*/master")
              }
          }
          steps {
              dsl {
                  external("jenkins/seedjobs/*.groovy")
                  ignoreExisting(false)
                  removeAction("DELETE")
                  removeViewAction("DELETE")
                  lookupStrategy("JENKINS_ROOT")
              }
          }
      }